#include <iostream>
using namespace std;

int K;
int files[501];
int DP[501][501];

int cal(int start, int end) {
	int result = 0;
	for (int i = start; i <= end; i++)
		result += files[i];

	return result;
}

void dinamic() {
	for (int i = 1; i <= K; i++)
		DP[i][i] = 0;

	for (int n = 1; n < K; n++) {
		for (int i = 1; i <= K - n; i++) {
			int sum = cal(i, i + n);
			int min = -1;
			for (int j = i; j < i + n; j++) {
				int temp = DP[i][j] + DP[j + 1][i + n];
				if (min == -1 || temp < min)
					min = temp;
			}
			DP[i][i + n] = sum + min;
		}
	}
}

int main() {
	int T; cin >> T;
	for (int i = 0; i < T; i++) {
		cin >> K;
		for (int j = 1; j <= K; j++)
			cin >> files[j];

		dinamic();
		cout << DP[1][K] << endl;
	}
}
